name: release

on:
  pull_request:
    types: [closed]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: current version
        run: echo "::set-output name=version::$(cat version.txt)"
        id: version
      - name: Create Release
        if: github.event.pull_request.merged == true
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ github.ref }}
          body: "Hi, this is an automated release"
          draft: false
          prerelease: false
      - name: create release zip
        if: github.event.pull_request.merged == true
        run: git archive --format=zip HEAD > pterm.zip
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pterm.zip
          asset_name: pterm.zip
          asset_content_type: application/zip
      - name: pypi release
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-setuptools python3-dev
          python3 -m pip install --user --upgrade setuptools wheel twine
          python3 setup.py sdist bdist_wheel
          twine upload dist/*
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
